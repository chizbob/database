1. List the commands for adding, updating, and deleting data.
A: 
ADD COLUMN (column name) || INSERT INTO (table name) 
UPDATE (table name)
DELETE FROM (table name) 

2. Explain the structure for each type of command.
A: 
ADD COLUMN (column name) 

INSERT INTO (table name) VALUES (values for each column and row);

UPDATE (table name) SET column name = value WHERE column name = value;

DELETE FROM (table name) WHERE column name = value;

3. What are some of the data types that can be used in tables? Give a real-world example of each type.
A: 
Signup sheets for a marathon. The columns may include user number, name, contact info, t-shirt size, etc. So the possible data types include number, string, date, email address and so on.  

4. Decide how to create a new table to hold a list of people invited to a wedding dinner. The table needs to have first and last names, whether they sent in their RSVP, the number of guests they are bringing, and the number of meals (1 for adults and 1/2 for children).

· Which data type would you use to store each of the following pieces of information?
	· First and last name. -> text
	· Whether they sent in their RSVP. -> boolean
	· Number of guests. -> integer
	· Number of meals. -> integer 
· Write a command that creates the table to track the wedding dinner.

CREATE TABLE dinner (
	first-name text,
	last-name text,	
	rsvp? boolean TRUE, FALSE
	#ofguests integer,
	#ofmeals integer
  );

· Write a command that adds a column to track whether the guest sent a thank you card.

ALTER TABLE dinner ADD COLUMN thankyoucard? boolean SET DEFAULT false;

· You have decided to move the data about the meals to another table, so write a command · to remove the column storing the number meals from the wedding table.

ALTER TABLE dinner DROP COLUMN #ofmeals;

· The guests will need a place to sit at the reception, so write a command that adds a column for table number.

ALTER TABLE dinner ADD COLUMN tablenumber integer;

· The wedding is over and we do not need to keep this information, so write a command that deletes the table numbers from the database.

DROP TABLE dinner;

5. Write a command to create a new table to hold the books in a library with the columns ISBN, title, author, genre, publishing date, number of copies, and available copies.

CREATE TABLE library (
        ISBN integer,
        title text,
        author text,
        genre text,
        publishingdate date, 
        #ofcopies integer,
        availablecopies integer
  );

· Find three books and add their information to the table.

INSERT INTO library (ISBN, title, author, genre, publishing date, #ofcopies, available copies)
  VALUES
  (1524763136, 'Becoming', 'Michelle Obama', 'Bio', 2018-11-13, 10, 8),
  (1524763137, 'Big O', 'John Doe', 'Novel', 2011-03-01, 10, 5),
  (1524763138, 'Database', 'Jane Main', 'SF', 2001-10-15, 5, 3);

· Someone has just checked out one of the books. Change the number of available copies to 1 fewer.

UPDATE library SET availablecopies=4 WHERE ISBN=1524763137;

· Now one of the books has been added to the banned books list. Remove it from the table.

DELETE FROM library WHERE ISBN=1524763138;

6. Write a command to make a new table to hold spacecrafts. Information should include id, name, year launched, country of origin, a brief description of the mission, orbiting body, if it is currently operating, and its approximate miles from Earth. In addition to the table creation, provide commands that perform the following operations:

CREATE TABLE spacecrafts (
        id integer,
        name text,
        yearlaunched date,
        origincountry text,
        mission text, 
        orbitingbody text,
        operating? boolean True, False,
 	milefromearth numerical
  );

· Add three non-Earth-orbiting satellites to the table.

INSERT INTO spacecrafts (id, name, yearlaunched, origincountry, mission, orbitingbody, operating? milefromearth)
  VALUES
  (37773, 'Juno', 2011, 'USA', 'space prober', 'Jupiter', True, 347),
  (10321, 'Voyager1', 1977, 'USA', 'space prober', 'outer solar system', True, 217,000),
  (39378, 'MAVEN', 2013, 'USA', 'space prober', Mars, True, 3,900);

· Remove one of the satellites from the table since it has just crashed into the planet.

DELETE FROM spacecrafts WHERE id=37773;

· Edit another satellite because it is no longer operating and change the value to reflect that.

UPDATE spacecrafts SET operating?=FALSE WHERE id=10321;

7. Write a command to create a new table to hold the emails in your inbox. This table should include an id, the subject line, the sender, any additional recipients, the body of the email, the timestamp, whether or not you have read the email, and the id of the email chain it's in. Also provide commands that perform the following operations:

CREATE TABLE email (
        id integer,
        subject text,
        sender text,
        cc text,
        body text, 
        timestamp datetime,
        read? boolean TRUE, FALSE
 	threadid integer
  );

· Add three new emails to the inbox.

INSERT INTO email (id, subject, sender, cc, body, 2017-07-23 13:10:11, read?, threadid)
  VALUES
  (001, 'Congrats', 'Bae', 'none', 'Birth of your daughter', 2018-07-23 13:20:11, TRUE, 3330),
  (002, 'See you tomorrow', 'Ms. Will', 'Ms. Bole', 'Come to school for conference', 2019-01-08 16:10:11, TRUE, 3331),
  (003, 'Job Interview', 'Recruiter', 'Team', 'Let me know your availability', FALSE, 3333);

· You deleted one of the emails, so write a command to remove the row from the inbox table.

DELETE FROM email WHERE id=001;

· You started reading an email but just heard a crash in another room. Mark the email as unread before investigating the crash, so you can come back and read it later.

UPDATE email SET read?=FALSE WHERE id=002;